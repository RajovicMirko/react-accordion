{"version":3,"sources":["components/Accordion.jsx","App.js","reportWebVitals.js","index.js"],"names":["defaultState","activeIndexes","defaults","isMultiple","defaultOpenIndexes","reducerTypes","accordionReducer","state","type","payload","length","filter","index","Accordion","children","useReducer","dispatchState","indexExists","includes","useEffect","onClick","event","removeIndex","setIndex","isNaN","Number","createIndex","currentTarget","dataset","id","dispatchActionType","isActive","App","accordionData","visible","hidden","className","map","row","style","borderBottom","background","marginTop","i","display","justifyContent","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f9e13137.chunk.js","sourcesContent":["import { useEffect, useReducer } from 'react'\r\n\r\nconst defaultState = {\r\n  activeIndexes: [],\r\n  defaults: {\r\n    isMultiple: false,\r\n    defaultOpenIndexes: [],\r\n  }\r\n}\r\n\r\nconst reducerTypes = {\r\n  init: 'INIT_STATE_ON_MOUNT',\r\n  clear: 'CLEAR_STATE_ON_UNMOUNT',\r\n  setDefaultIndex: 'SET_DEFAULT_ACTIVE_INDEX',\r\n  setIndex: 'SET_ACTIVE_INDEX',\r\n  removeIndex: 'REMOVE_ACTIVE_INDEX',\r\n}\r\n\r\nconst accordionReducer = (state, { type, payload }) => {\r\n  const { isMultiple } = state.defaults;\r\n\r\n  switch (type) {\r\n    case reducerTypes.init:\r\n      const activeIndexes = payload.defaultOpenIndexes && payload.defaultOpenIndexes.length ? payload.defaultOpenIndexes : defaultState.defaults.defaultOpenIndexes;\r\n      const defaults = { ...state.defaults, ...payload };\r\n      return { ...state, activeIndexes, defaults }\r\n\r\n    case reducerTypes.clear: return defaultState;\r\n\r\n    case reducerTypes.setDefaultIndex: return { ...state, activeIndexes: [payload] };\r\n\r\n    case reducerTypes.setIndex:\r\n      return isMultiple\r\n        ? { ...state, activeIndexes: [...state.activeIndexes, payload] }\r\n        : { ...state, activeIndexes: [payload] };\r\n\r\n    case reducerTypes.removeIndex:\r\n      return isMultiple\r\n        ? { ...state, activeIndexes: state.activeIndexes.filter((index) => index !== payload) }\r\n        : { ...state, activeIndexes: [] };\r\n    default: return state;\r\n  }\r\n}\r\n\r\nconst createIndex = (index) => isNaN(index) ? index : Number(index);\r\n\r\nfunction Accordion({ children, defaults = {} }) {\r\n  const [state, dispatchState] = useReducer(accordionReducer, defaultState)\r\n\r\n  const indexExists = (index) => state.activeIndexes.includes(index);\r\n\r\n  const handleAccordionRowClick = (event) => {\r\n    const { removeIndex, setIndex } = reducerTypes;\r\n\r\n    const index = createIndex(event.currentTarget.dataset.id);\r\n    const dispatchActionType = indexExists(index) ? removeIndex : setIndex;\r\n\r\n    dispatchState({ type: dispatchActionType, payload: index });\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatchState({ type: reducerTypes.init, payload: defaults });\r\n    return () => dispatchState({ type: reducerTypes.clear });\r\n  }, []);\r\n\r\n  const renderProps = {\r\n    onClick: handleAccordionRowClick,\r\n    isActive: (index) => indexExists(index),\r\n  }\r\n\r\n  return children(renderProps);\r\n}\r\n\r\nexport default Accordion\r\n","import './App.css';\nimport Accordion from './components/Accordion';\n\nfunction App() {\n  const accordionData = [\n    { id: 'row_1', visible: 'Row Visible Part 1', hidden: 'Row Hidden Part 1' },\n    { id: 'row_2', visible: 'Row Visible Part 2', hidden: 'Row Hidden Part 2' },\n    { id: 'row_3', visible: 'Row Visible Part 3', hidden: 'Row Hidden Part 3' },\n    { id: 'row_4', visible: 'Row Visible Part 4', hidden: 'Row Hidden Part 4' },\n    { id: 'row_5', visible: 'Row Visible Part 5', hidden: 'Row Hidden Part 5' },\n    { id: 'row_6', visible: 'Row Visible Part 6', hidden: 'Row Hidden Part 6' },\n    { id: 'row_7', visible: 'Row Visible Part 7', hidden: 'Row Hidden Part 7' },\n  ]\n\n  return (\n    <div className=\"App\">\n      <Accordion\n        defaults={{\n          isMultiple: false,\n          defaultOpenIndexes: ['row_3', 'row_5', 3],\n        }}\n      >\n        {({ onClick, isActive }) => {\n          return (\n            <div>\n              {\n                accordionData.map((row) => (\n                  <div key={row.hidden} data-id={row.id} onClick={onClick} style={{ borderBottom: '1px solid black', background: 'yellow' }}>\n                    <div>{row.visible}</div>\n                    {isActive(row.id) && <div>{row.hidden}</div>}\n                  </div>\n                ))\n              }\n\n              <div style={{ marginTop: '5rem' }}>\n                {\n                  accordionData.map((row) => (\n                    <div key={row.hidden} style={{ borderBottom: '1px solid black' }}>\n                      <div data-id={row.id} onClick={onClick} style={{ background: 'yellow' }}>{row.visible}</div>\n                      {isActive(row.id) && <div>{row.hidden}</div>}\n                    </div>\n                  ))\n                }\n              </div>\n\n              <div style={{ marginTop: '5rem' }}>\n                {\n                  accordionData.map((row, i) => (\n                    <div key={row.visible} style={{ borderBottom: '1px solid black' }}>\n                      <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                        <div>{row.visible}</div>\n                        <button type=\"button\" data-id={i} onClick={onClick} style={{ background: 'yellow' }}>{`${isActive(i) ? 'Close' : 'Open'}`}</button>\n                      </div>\n                      {isActive(i) && <div>{row.hidden}</div>}\n                    </div>\n                  ))\n                }\n              </div>\n            </div>\n          )\n        }}\n      </Accordion>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}